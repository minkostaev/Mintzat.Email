# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      env:
        APIKEY: ${{ secrets.APIKEY }}
        BCC: ${{ secrets.BCC }}
        CC: ${{ secrets.CC }}
        RECIPIENTS: ${{ secrets.RECIPIENTS }}
        SENDER: ${{ secrets.SENDER }}
      run: dotnet test
        /p:CollectCoverage=true
        /p:CoverletOutput=TestResults/
        /p:CoverletOutputFormat=lcov
      #run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      #run: dotnet test --no-build --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/

    - name: Publish coverage report to coveralls.io   
      uses: coverallsapp/github-action@master   
      with:
        github-token: ${{ secrets.COVERALLS_REPO_TOKEN }} 
        path-to-lcov: Mintzat.Email.Tests/TestResults/coverage.info

    #- name: Upload coverage to Codecov
    #  uses: codecov/codecov-action@v3
    #  with:
    #    files: ./TestResults/coverage.cobertura.xml
    #    token: ${{ secrets.CODECOV_TOKEN }}
        
    #- name: Upload test results to Codecov
    #  if: ${{ !cancelled() }}
    #  uses: codecov/test-results-action@v1
    #  with:
    #    token: ${{ secrets.CODECOV_TOKEN }}

    #- name: Send coverage to Coveralls
    #  env:
    #    COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
    #  run: |
    #    dotnet tool install --global coveralls.net
    #    dotnet coveralls --opencover -i Mintzat.Email.Tests/coverage.opencover.xml